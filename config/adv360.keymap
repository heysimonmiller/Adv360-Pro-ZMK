
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

#define AS(keycode) &as LS(keycode) keycode

/ {
  behaviors {
    #include "macros.dtsi"

    as: auto_shift {
        compatible = "zmk,behavior-hold-tap";
        label = "AUTO_SHIFT";
        #binding-cells = <2>;
        tapping_term_ms = <200>;
        quick_tap_ms = <0>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };

    hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick_tap_ms = <175>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };

    ht: hold_tap{
        compatible = "zmk,behavior-hold-tap";
        label = "HOLD_TAP";
        #binding-cells = <2>;
        tapping-term-ms = <150>;
        quick_tap_ms = <0>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };
    
   cpy: copy_paste  {
        compatible = "zmk,behavior-tap-dance";
        label = "CPY_PST";
        #binding-cells = <0>;
        tapping-term-ms = <200>;
        bindings = <&kp LG(C)>, <&kp LG(V)>;
    };

    td0: tap_dance_0 {
        compatible = "zmk,behavior-tap-dance";
        label = "TAP_DANCE_0";
        #binding-cells = <0>;
        tapping-term-ms = <200>;
        bindings = <&sl 1>, <&tog 1>;
    };
  };

    keymap {
        compatible = "zmk,keymap";


        default_layer {
            bindings = <
&ht GRAVE TILDE  &ht PLUS EXCL  &ht LBKT AT  &ht LBRC HASH  &ht LPAR DLLR  &ht AMPS PRCNT     &tog 1                                                                    &mo 3         &ht KP_EQUAL CARET  &ht RPAR AMPS  &ht RBRC STAR  &ht RBKT KP_SLASH  &kp STAR   &kp MINUS
AS(TAB)          AS(Q)          AS(W)        AS(E)          AS(R)          AS(T)              &cpy                                                                      &cpy          AS(Y)               AS(U)          AS(I)          AS(O)              AS(P)      AS(BSLH)
&kp ESC          AS(A)          AS(S)        AS(D)          AS(F)          AS(G)              &none    &kp LCTRL  &kp LALT                         &kp RALT  &kp RCTRL  &none         AS(H)               AS(J)          AS(K)          AS(L)              AS(SEMI)   AS(SQT)
&kp LSHFT        AS(Z)          AS(X)        AS(C)          AS(V)          AS(B)              &none    &none      &kp LGUI       &none  &none      &kp RGUI  &none      &none         AS(N)               AS(M)          AS(COMMA)      AS(DOT)            AS(FSLH)   kp RSHFT
&mo 2            &kp GRAVE      &caps_word   &kp LEFT       &kp RIGHT                         &kp DEL  &kp BSPC   &td0                             &td0      &kp SPACE  &kp ENTER                         &kp DOWN       &kp UP         &none              &none      &mo 2
            >;
        };

        layer_keypad {
            bindings = <
 &trans  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5      &trans                                                     &trans      &kp N6  &kp N7  &kp N8  &kp N9  &kp N0  &trans
 &trans  &trans  &trans  &trans  &trans  &trans      &trans                                                     &trans      &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans                     &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans   &trans   &trans   &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans                     &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans
            >;
        };

        layer_fn {
            bindings = <
 &trans  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5      &trans                                                     &trans      &kp F6  &kp F7  &kp F8  &kp F9   &kp F10  &ht F11 F12
 &trans  &trans  &trans  &trans  &trans  &trans      &trans                                                     &trans      &trans  &trans  &trans  &trans   &trans   &trans
 &trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans                     &trans  &trans  &trans      &trans  &trans  &trans  &trans   &trans   &trans
 &trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans   &trans   &trans   &trans  &trans  &trans      &trans  &trans  &trans  &trans   &trans   &trans
 &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans                     &trans  &trans  &trans              &trans  &trans  &trans   &trans   &trans
            >;
        };

        layer_mod {
            bindings = <
  &none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                             &none                                                                              &trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4   &none
  &none         &none         &none         &none         &none         &none                       &bootloader                                                                         &bootloader         &none         &none         &none         &none         &none   &none
  &none         &none         &none         &none         &none         &none            &rgb_ug RGB_MEFS_CMD 5  &bt BT_CLR   &none                  &bt BT_CLR  &bt BT_CLR  &rgb_ug RGB_MEFS_CMD 5         &none         &none         &none         &none         &none   &none
  &none         &none         &none         &none         &none         &none                             &none       &none   &none   &none   &none       &none       &none                   &none         &none         &none         &none         &none         &none   &none
  &none         &none         &none    &bl BL_INC    &bl BL_DEC                                 &rgb_ug RGB_TOG  &bl BL_TOG   &none                       &none  &bl BL_TOG         &rgb_ug RGB_TOG                  &bl BL_INC    &bl BL_DEC         &none         &none   &none
            >;
        };
    };
};